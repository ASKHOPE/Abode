export interface Property {
  id: string;
  name: string;
  address: string;
  rooms: number;
  floors: number;
  tenants: Tenant[];
  archive: boolean;
}

export interface Tenant {
  id: string;
  name: string;
  floor: string;
  room: number;
  rent: number;
  leaseStart: string;
  leaseEnd: string;
  rentStatus: string;
  propertyId: string;
  archive : boolean;
}

export interface RentPayment {
  id: string;
  tenantId: string;
  amount: number;
  date: string;
  month: string;
  status: 'paid' | 'pending' | 'partial'| 'advance paid' | 'due' | 'overdue'|'contract breach' | 'contract renewed'| 'contract expired' ;
  archive: boolean;
}

export interface TodoItem {
  id: string;         // Unique identifier (e.g., generated by crypto.randomUUID())
  text: string;       // The content/description of the todo task
  completed: boolean; // Status flag: true if the task is done, false otherwise
  createdAt: string;  // ISO 8601 formatted date string (e.g., new Date().toISOString())
}

export interface User {
  id: string;         // Unique ID (e.g., generated by crypto.randomUUID())
  username: string;      // Used for login, needs to be unique within your system
  password: string;   // The user's password (in this simple example, stored as plaintext - NOT SECURE FOR PRODUCTION!)
  name?: string;      // Optional: The user's display name
}